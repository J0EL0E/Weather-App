<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="shortcut icon"
      type="x-icon"
      href="\images\icons8-sun-behind-small-cloud-48.png"
    />
    <title>Weather App - Search</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=DM+Serif+Display&family=Dosis&family=Honk&family=Lato&family=Love+Ya+Like+A+Sister&family=Nanum+Gothic&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Press+Start+2P&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=DM+Serif+Display&family=Dosis&family=Honk&family=Lato&family=Love+Ya+Like+A+Sister&family=Nanum+Gothic&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Oswald:wght@200..700&family=Press+Start+2P&family=Raleway:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/styles/style.css" />
  </head>
  <body>
    <div class="container">
      <div class="weather-container">
        <div
          class="search-bar-section"
          onmouseover="insideSearchSection(this)"
          onmouseleave="outsideSearchSection(this)"
        >
          <button class="search-toggle">
            <span class="material-symbols-outlined"> search </span>
          </button>
          <form action="/search" method="post" class="search-form">
            <input
              type="search"
              id="search"
              name="search-value"
              class="search-input"
              required
            />
            <button type="submit" class="search-btn">
              <span class="material-symbols-outlined"> search </span>
            </button>
          </form>
        </div>
        <div>
          <span class="material-symbols-outlined" id="weather-icon">
            partly_cloudy_day
          </span>
          <% if(locals.minTemp && locals.maxTemp) { %>
          <h1 class="temperature-text">
            <%= minTemp[0] %> °C - <%= maxTemp[0] %> °C
          </h1>
          <% } else { %>
          <h1 class="temperature-text">Temperature °C</h1>
          <% } %>
        </div>
        <% if (locals.location) { %>
        <h2><%= location[0] %></h2>
        <% } else {%>
        <h2>Place</h2>
        <% } %> <% if (locals.weather) {%>
        <h2 class="weather-type"><%= weather[0] %></h2>
        <% } else { %>
        <h2 class="weather-type">Weather</h2>
        <% } %>

        <p class="suggestions">
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Deserunt vel
          sunt perferendis rem eum adipisci, iure suscipit ducimus maxime.
          Eveniet odio accusantium temporibus in iusto ipsa sint blanditiis
          ullam nostrum?
        </p>
      </div>
      <div class="hourly-weather">
        <h3>Today's Weather Summary</h3>
        <div>
          <% if (locals.hourlyWeather && locals.hourlyTime &&
          locals.hourlyTemp){%> <% const currentHour = new Date().getHours() %>
          <% const currentDate = new Date()%> <% const today =
          currentDate.getFullYear()+ "-" + (currentDate.getMonth()+1) + "-0" +
          currentDate.getDate() %> <% const filterTime =
          hourlyTime.filter((element) => new Date(element).getHours() ===
          currentHour && new Date(element).getFullYear() + "-" + (new
          Date(element).getMonth()+1) + "-0" + new Date(element).getDate() ===
          today) %> <% const index = hourlyTime.indexOf(filterTime[0]) %> <% for
          (let i = index; i < (index+5); i++) { %> <% const hour = new
          Date(hourlyTime[i]).getHours() + " : 00"%> <% const temperature =
          hourlyTemp[i]; %> <% const weather = hourlyWeather[i] %>
          <div class="hourly-weather-data">
            <p><%=hour %></p>
            <p><%= temperature %>°C</p>
            <p class="hourly-weather-icon"><%= weather %></p>
          </div>

          <% } %> <% } %>
        </div>
      </div>
      <div class="weather-forecast">
        <h3>5-day Weather Forecast</h3>
        <table class="three-day-weather">
          <tr class="table-headers">
            <th scope="col"><h4>Date</h4></th>
            <th scope="col"><h4>Weather</h4></th>
            <th scope="col"><h4>Temperature</h4></th>
          </tr>
          <% if(locals.time && locals.weather && locals.minTemp &&
          locals.maxTemp) { %>
          <tr>
            <td class="five-day-time"><%=time[0] %></td>
            <td class="five-day-weather"><%=weather[0]%></td>
            <td><b><%=minTemp[0] %>°C</b> to <b><%= maxTemp[0]%>°C</b></td>
          </tr>
          <tr>
            <td class="five-day-time"><%=time[1] %></td>
            <td class="five-day-weather"><%=weather[1]%></td>
            <td><b><%=minTemp[1] %>°C</b> to <b><%= maxTemp[1]%>°C</b></td>
          </tr>
          <tr>
            <td class="five-day-time"><%=time[2] %></td>
            <td class="five-day-weather"><%=weather[2]%></td>
            <td><b><%=minTemp[2] %>°C</b> to <b><%= maxTemp[2]%>°C</b></td>
          </tr>
        </table>
        <% } %>
        <div id="weather-forecast-collapsable-div">
          <table>
            <% if(locals.time && locals.weather && locals.minTemp &&
            locals.maxTemp) { %>
            <tr>
              <td class="five-day-time"><%=time[3] %></td>
              <td class="five-day-weather"><%=weather[3]%></td>
              <td><b><%=minTemp[3] %>°C</b> to <b><%= maxTemp[3]%>°C</b></td>
            </tr>
            <tr>
              <td class="five-day-time"><%=time[4] %></td>
              <td class="five-day-weather"><%=weather[4]%></td>
              <td><b><%=minTemp[4] %>°C</b> to <b><%= maxTemp[4]%>°C</b></td>
            </tr>
            <% } %>
          </table>
        </div>
        <div class="see-more-btn-container">
          <button class="see-more-btn">See More</button>
          <button class="see-less-btn">See Less</button>
        </div>
      </div>
    </div>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>
    <script>
      const weatherIndicatorImg = document.querySelector("#weather-icon");
      const suggestionText = document.querySelector(".suggestions");
      const weatherType = document.querySelector(".weather-type");
      const weatherContainer = document.querySelector(".weather-container");
      const weatherInFiveDays = document.querySelectorAll(".five-day-weather");
      const timeInFiveDays = document.querySelector(".five-day-time");
      const timeData = document.querySelectorAll(".five-day-time");
      const ThreeDayWeatherForecast =
        document.querySelector(".three-day-weather");
      const hourlyWeatherIcon = document.querySelectorAll(
        ".hourly-weather-icon"
      );
      const seeLessBtn = document.querySelector(".see-less-btn");
      const seeMoreBtn = document.querySelector(".see-more-btn");
      const searchToggle = document.querySelector(".search-toggle");
      const searchForm = document.querySelector(".search-form");
      const collapseTable = document.querySelector(
        "#weather-forecast-collapsable-div"
      );

      /*the collapsing search bar*/
      searchForm.style.display = "none";
      function insideSearchSection(element) {
        searchToggle.addEventListener("click", () => {
          searchForm.style.display = "flex";
          searchToggle.style.display = "none";
        });
      }

      function outsideSearchSection(element) {
        setTimeout(() => {
          searchForm.style.display = "none";
          searchToggle.style.display = "block";
        }, 5000);
      }

      window.addEventListener("load", () => {
        //Changing the text content of the see more button if expanded

        seeMoreBtn.addEventListener("click", () => {
          collapseTable.childNodes[1].style.visibility = "visible";
          seeMoreBtn.style.display = "none";
          setTimeout(() => {
            seeLessBtn.style.display = "block";
          }, 400);
        });
        seeLessBtn.addEventListener("click", () => {
          collapseTable.childNodes[1].style.visibility = "collapse";
          seeLessBtn.style.display = "none";
          setTimeout(() => {
            seeMoreBtn.style.display = "block";
          }, 400);
        });

        //Changing the weather code to matching weather conditions
        if (weatherType.innerHTML == 0) {
          weatherType.innerHTML = "Clear sky";
        } else if (weatherType.innerHTML <= 3 && weatherType.innerHTML >= 1) {
          weatherType.innerHTML = "Partly cloudy";
        } else if (weatherType.innerHTML <= 48 && weatherType.innerHTML >= 45) {
          weatherType.innerHTML = "Foggy";
        } else if (weatherType.innerHTML <= 55 && weatherType.innerHTML >= 45) {
          weatherType.innerHTML = "Light drizzle";
        } else if (weatherType.innerHTML <= 57 && weatherType.innerHTML >= 56) {
          weatherType.innerHTML = "Moderate drizzle";
        } else if (weatherType.innerHTML <= 65 && weatherType.innerHTML >= 61) {
          weatherType.innerHTML = "Slight rain";
        } else if (weatherType.innerHTML <= 67 && weatherType.innerHTML >= 66) {
          weatherType.innerHTML = "Moderate to intense rain";
        } else if (weatherType.innerHTML <= 75 && weatherType.innerHTML >= 71) {
          weatherType.innerHTML = "Snow fall";
        } else if (weatherType.innerHTML === 77) {
          weatherType.innerHTML = "Moderate to heavy snow fall";
        } else if (weatherType.innerHTML <= 82 && weatherType.innerHTML >= 80) {
          weatherType.innerHTML = "Rain shower";
        } else if (weatherType.innerHTML <= 86 && weatherType.innerHTML >= 85) {
          weatherType.innerHTML = "Snow shower";
        } else if (weatherType.innerHTML === 95) {
          weatherType.innerHTML = "Slight thunderstorm";
        } else if (weatherType.innerHTML <= 99 && weatherType.innerHTML >= 96) {
          weatherType.innerHTML = "Moderate to intense thunderstorm";
        }
        //conversion of
        for (let i = 0; i < weatherInFiveDays.length; i++) {
          if (weatherInFiveDays[i].innerHTML == 0) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                 clear_day
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 3 &&
            weatherInFiveDays[i].innerHTML >= 1
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  partly_cloudy_day
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 48 &&
            weatherInFiveDays[i].innerHTML >= 45
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  foggy
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 55 &&
            weatherInFiveDays[i].innerHTML >= 45
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  rainy
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 57 &&
            weatherInFiveDays[i].innerHTML >= 56
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  rainy
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 65 &&
            weatherInFiveDays[i].innerHTML >= 61
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  rainy
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 67 &&
            weatherInFiveDays[i].innerHTML >= 66
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  rainy
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 75 &&
            weatherInFiveDays[i].innerHTML >= 71
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  cloudy_snowing
                </span>`;
          } else if (weatherInFiveDays[i].innerHTML === 77) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  cloudy_snowing
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 82 &&
            weatherInFiveDays[i].innerHTML >= 80
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  rainy
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 86 &&
            weatherInFiveDays[i].innerHTML >= 85
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  cloudy_snowing
                </span>`;
          } else if (weatherInFiveDays[i].innerHTML === 95) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  thunderstorm
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 99 &&
            weatherInFiveDays[i].innerHTML >= 96
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  thunderstorm
                </span>`;
          }
        }

        //Changing the icon and background image according to the weather condition
        if (weatherType.innerHTML === "Clear sky") {
          weatherIndicatorImg.innerHTML = "clear_day";
          weatherContainer.style.backgroundImage =
            "url('/images/sky-5534319_1920.jpg')";
          weatherContainer.style.backgroundSize = "cover";
          suggestionText.innerHTML = "What a beatiful day to go outdoors!";
        } else if (weatherType.innerHTML === "Foggy") {
          weatherIndicatorImg.innerHTML = "foggy";
          weatherContainer.style.backgroundImage =
            "url('/images/clouds-196230_1280.jpg')";
          weatherContainer.style.backgroundSize = "cover";
          suggestionText.innerHTML =
            "Be careful on driving because of low visibility";
        } else if (weatherType.innerHTML === "Partly cloudy") {
          weatherIndicatorImg.innerHTML = "partly_cloudy_day";
          weatherContainer.style.backgroundImage =
            "url('/images/clouds-196230_1280.jpg')";
          weatherContainer.style.backgroundSize = "cover";
          suggestionText.innerHTML = "Today's weather neither hot or cold!";
        } else if (
          weatherType.innerHTML === "Light drizzle" ||
          weatherType.innerHTML === "Moderate drizzle" ||
          weatherType.innerHTML === "Slight rain" ||
          weatherType.innerHTML === "Moderate to intense rain" ||
          weatherType.innerHTML === "Rain shower"
        ) {
          weatherIndicatorImg.innerHTML = "rainy";
          weatherContainer.style.backgroundImage =
            "url('/images/drops-2404441_1920.jpg')";
          weatherContainer.style.backgroundSize = "cover";
          suggestionText.innerHTML = "Don't forget to bring your umbrella!";
        } else if (
          weatherType.innerHTML === "Snow fall" ||
          weatherType.innerHTML === "Moderate to heavy snow fall" ||
          weatherType.innerHTML === "Snow shower"
        ) {
          weatherIndicatorImg.innerHTML = "cloudy_snowing";
          weatherContainer.style.backgroundImage =
            "url('/images/snowfall-201496_1920.jpg')";
          weatherContainer.style.backgroundSize = "cover";
          suggestionText.innerHTML = "Make sure to dress in layers!";
        } else if (
          weatherType.innerHTML === "Moderate to intense thunderstorm" ||
          weatherType.innerHTML === "Slight thunderstorm"
        ) {
          weatherIndicatorImg.innerHTML = "thunderstorm";
          weatherContainer.style.backgroundImage =
            "url('/images/thunderstorm-4234254_1'920.jpg')";
          weatherContainer.style.backgroundSize = "cover";
          suggestionText.innerHTML = "Beware of going outside at this time!";
        }

        //Looping the innerHTML of timeData and convert it to Month and Day format
        for (let i = 0; i < timeData.length; i++) {
          const tempDate = new Date(timeData[i].innerHTML);
          const day = tempDate.getDate();
          const month = tempDate.getMonth() + 1;
          if (month === 1) {
            timeData[i].innerHTML = "January " + day;
          } else if (month === 2) {
            timeData[i].innerHTML = "February " + day;
          } else if (month === 3) {
            timeData[i].innerHTML = "March " + day;
          } else if (month === 4) {
            timeData[i].innerHTML = "April " + day;
          } else if (month === 5) {
            timeData[i].innerHTML = "May " + day;
          } else if (month === 6) {
            timeData[i].innerHTML = "June " + day;
          } else if (month === 7) {
            timeData[i].innerHTML = "July " + day;
          } else if (month === 8) {
            timeData[i].innerHTML = "August " + day;
          } else if (month === 9) {
            timeData[i].innerHTML = "September " + day;
          } else if (month === 10) {
            timeData[i].innerHTML = "October " + day;
          } else if (month === 11) {
            timeData[i].innerHTML = "November " + day;
          } else if (month === 12) {
            timeData[i].innerHTML = "December" + day;
          }
        }
        //Conversion of hourlyWeatherCode into icons
        for (let i = 0; i < hourlyWeatherIcon.length; i++) {
          if (hourlyWeatherIcon[i].innerHTML == 0) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  clear_day
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 3 &&
            hourlyWeatherIcon[i].innerHTML >= 1
          ) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  partly_cloudy_day
                </span>`;
          } else if (
            hourlyWeatherIcon[i].innerHTML <= 48 &&
            hourlyWeatherIcon[i].innerHTML >= 45
          ) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  foggy
                </span>`;
          } else if (
            hourlyWeatherIcon[i].innerHTML <= 55 &&
            hourlyWeatherIcon[i].innerHTML >= 45
          ) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  rainy
                </span>`;
          } else if (
            hourlyWeatherIcon[i].innerHTML <= 57 &&
            hourlyWeatherIcon[i].innerHTML >= 56
          ) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  rainy
                </span>`;
          } else if (hourlyWeatherIcon[i].innerHTML >= 61) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  rainy
                </span>`;
          } else if (
            hourlyWeatherIcon[i].innerHTML <= 67 &&
            hourlyWeatherIcon[i].innerHTML >= 66
          ) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  rainy
                </span>`;
          } else if (
            hourlyWeatherIcon[i].innerHTML <= 75 &&
            hourlyWeatherIcon[i].innerHTML >= 71
          ) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  cloudy_snowing
                </span>`;
          } else if (weatherInFiveDays[i].innerHTML === 77) {
            weatherInFiveDays[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  cloudy_snowing
                </span>`;
          } else if (
            weatherInFiveDays[i].innerHTML <= 82 &&
            weatherInFiveDays[i].innerHTML >= 80
          ) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  rainy
                </span>`;
          } else if (
            hourlyWeatherIcon[i].innerHTML <= 86 &&
            hourlyWeatherIcon[i].innerHTML >= 85
          ) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  cloudy_snowing
                </span>`;
          } else if (hourlyWeatherIcon[i].innerHTML === 95) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  thunderstorm
                </span>`;
          } else if (
            hourlyWeatherIcon[i].innerHTML <= 99 &&
            hourlyWeatherIcon[i].innerHTML >= 96
          ) {
            hourlyWeatherIcon[
              i
            ].innerHTML = `<span class="material-symbols-outlined">
                  thunderstorm
                </span>`;
          }
        }
      });
    </script>
  </body>
</html>
